.\"Copyright (c) 2024 LEVAI Daniel
.\"All rights reserved.
.\"Redistribution and use in source and binary forms, with or without
.\"modification, are permitted provided that the following conditions are met:
.\"	* Redistributions of source code must retain the above copyright
.\"	notice, this list of conditions and the following disclaimer.
.\"	* Redistributions in binary form must reproduce the above copyright
.\"	notice, this list of conditions and the following disclaimer in the
.\"	documentation and/or other materials provided with the distribution.
.\"THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
.\"ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\"WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\"DISCLAIMED. IN NO EVENT SHALL LEVAI Daniel BE LIABLE FOR ANY
.\"DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\"(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\"LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
.\"ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\"(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
.\"SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.Dd $Mdocdate: March 12 2024 $
.Dt LOGIN_YKHMAC 8
.Os
.Sh NAME
.Nm login_ykhmac
.Nd provides YubiKey HMAC-SHA1 challenge-response authentication
.Sh SYNOPSIS
.Nm
.Op Fl s Ar service
.Ar user
.Op Ar class
.Sh DESCRIPTION
The
.Nm
utility
.Po if configured
.Pc
is called by
.Xr login 1 ,
.Xr su 1 ,
and others to authenticate the
.Ar user
with a YubiKey.
This login method uses the HMAC-SHA1 challenge-response mode of the YubiKey.
For using the YubiKey OTP mode, see
.Xr login_yubikey 8 .
.Pp
The options are as follows:
.Bl -tag -width indent
.It Fl d
Debug mode.
Output is sent to the standard output instead of the
.Bx
Authentication backchannel.
.It Fl s Ar service
Specify the service.
Currently, only
.Li challenge ,
.Li login ,
and
.Li response
are supported.
The default protocol is
.Em login .
.It Fl v
This option and its value are ignored.
.El
.Pp
The
.Ar user
argument is the login name of the user to be authenticated.
.Pp
The optional
.Ar class
argument is accepted for consistency with the other login scripts but
is not used.
.Pp
.Nm
uses state files containing three lines: the YubiKey slot number, a salt, and
the expected encoded and hashed response for a challenge.
A state file - named after its serial number - corresponds to a specific
YubiKey.
State files are searched either under the
.Ql .login_ykhmac
directory in the user's home directory, or can be collected in a global
directory - latter needs the
.Ql x-ykhmac-state_dir
.Xr login.conf 5
option specified for the login class.
.Pp
State files are named after the YubiKey's 8-digit serial number, e.g.:
.Ql /home/user/.login_ykhmac/12345678
.Pp
The
.Nm
utility has the following
.Em optional
.Xr login.conf 5
variables:
.Bl -tag -offset ||| -width |
.It Cm x-ykhmac-state_dir
This string variable specifies the directory of a global collection of
directories containing state files.
Each sub directory should be named after a username and in turn contain the
state files named after the corresponding YubiKey serial numbers.
For convenience, make sure the state files are writable as the user, so they
can update their passwords without assistance.
If you omit this variable, then the default path will be used for searching for
state files, which is
.Ql .login_ykhmac
in the user's home directory.
.It Cm x-ykhmac-standalone
This boolean turns on standalone mode.
When in standalone mode
.Nm
uses the login type independently
.Po i.e. ignores existing passwords in the
.Ql passwd
file
.Pc ,
and using the user-supplied password during authentication as the
YubiKey challenge.
When working in combined mode
.Po i.e. without
.Ql x-ykhmac-standalone
.Pc ,
.Nm
will check and re-use the user's existing local password hash from the
.Ql passwd
file as the YubiKey challenge, thus complementing a local password check with
this YubiKey challenge-response mode.
.El
.Pp
Setting up a state file is as easy as writing the slot number as the first
line, e.g.:
.Bd -literal
$ echo 2 > ~/.login_ykhmac/12345678
.Ed
or
.Bd -literal
$ echo 1 > /var/db/login_ykhmac/user/12345678
.Ed
.Pp
Then appending a salt and the expected YubiKey response as the second and third
line into the same state file:
.Bl -tag -offset ||| -width |
.It Standalone mode - use the login type independently
.Po i.e. ignoring existing passwords in the `passwd` file
.Pc
.Bd -literal
$ mkdir ~/.login_ykhmac
$ echo -n $(echo -n 'myPassword' |/bin/sha256 |/usr/local/bin/ykchalresp -2 -i- |tr -d '\n')$(openssl rand -hex 32 |tee -a /home/user/.login_ykhmac/12345678 ) |/bin/sha512 >> /home/user/.login_ykhmac/12345678
.Ed
.It Combined with the existing local password
.Po i.e. re-using the existing password in the `passwd` file
.Pc
As root
.Po to access master.passwd
.Pc ,
encode the user's hashed password:
.Bd -literal
# echo -n $(awk 'BEGIN {FS=":"} /^user:/ {print $2}' /etc/master.passwd |tr -d '\n' |/bin/sha256 |/usr/local/bin/ykchalresp -2 -i- |tr -d '\n')$(openssl rand -hex 32 |tee -a /home/user/.login_ykhmac/12345678 ) |/bin/sha512 >> /home/user/.login_ykhmac/12345678
.Ed
.El
.Sh EXAMPLES
.Bl -tag -width |
.It Em login.conf :
.Bd -literal
ykhmac:\e
	:auth=ykhmac:\e
	:x-ykhmac-state_dir=/var/db/login_ykhmac:\e
	:tc=default:
.Ed
.Pp
In this case the state file(s)
.Po named after the YubiKey serial number(s)
.Pc
must be in the specified state directory, under sub directories for each
username, e.g.:
.Ql /var/db/login_ykhmac/user/12345678
.Bd -literal
ykhmac:\e
	:auth=ykhmac:\e
	:x-ykhmac-standalone:\e
	:tc=default:
.Ed
.Pp
In this case per-user state directories are used
.Po e.g
.Ql /home/user/.login_ykhmac/12345678
.Pc
because there's no state directory override, and standalone mode is turned on,
which means
.Nm
won't use the user's password hash from the
.Ql passwd
file, it'll use a newly specified password encoded and hashed in the state file.
This will be separate from the user's local password.
.El
.Sh SEE ALSO
.Xr login 1 ,
.Xr su 1 ,
.Xr login.conf 5
.Sh AUTHORS
.Nm
was written by
.An LEVAI Daniel
<leva@ecentrum.hu>.
.Pp
Source, information, bugs:
https://github.com/levaidaniel/login_ykhmac
.Sh CAVEATS
When in combined mode
.Po e.g. using the local password hash of the user
.Pc ,
the state file needs to be updated after a password change
.Po e.g. with
.Xr passwd 1
.Pc .
.Pp
When not in standalone mode,
.Nm
gets the user's password hash using
.Xr getpwnam_shadow 3
from the
.Ql passwd
file.
This assumes that the program invoking this library function has an effective
UID of 0.
While this works when e.g. logging in on the console or using
.Xr doas 1 ,
this doesn't necessarily work when using e.g. an X11 screen locker.
In this case, either you use
.Nm
in standalone mode or give the screen locker binary the setuid bit, which isn't
particularly secure.
.Pp
Logging in remotely
.Po e.g. SSH
.Pc
can not work because this method requires the
presence of the physical YubiKey during authentication.
Consequently, when using such access, make sure to use an authentication method
that doesn't use this type
.Po e.g. private keys
.Pc .
